{"version":3,"sources":["Player.js","RenderPlayList.js","SubjectList.js","App.js","serviceWorker.js","index.js"],"names":["Player","props","onClickFullscreen","screenfull","request","findDOMNode","refs","player","handleSetPlaybackRate","e","setState","playbackRate","parseFloat","target","value","state","vid","console","log","match","params","video_id","this","style","backgroundColor","position","paddingTop","PlayerRatio","padding","top","left","borderRadius","url","height","width","controls","playing","light","pip","playIcon","class","border","marginTop","onClick","React","Component","RenderPlayList","isLoading","dataSource","subject_link","fetch","then","response","json","responseJson","catch","error","margin","marginLeft","marginRight","map","data","index","key","className","fontSize","to","userId","firstName","SubjectList","subject","display","gridTemplateColumns","gridTemplateRows","gridGap","textAlign","alignSelf","gridAutoRows","fontFamily","videoListLink","subjectName","App","myRef","createRef","ref","basename","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.e17fe0bf.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport ReactPlayer from 'react-player'\r\nimport './App.css';\r\nimport { findDOMNode } from 'react-dom'\r\nimport screenfull from 'screenfull'\r\n\r\n\r\n\r\nclass Player extends React.Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state={\r\n            vid:null,\r\n            playbackRate: 1.0,\r\n        }\r\n        console.log(props)\r\n        console.log(\"bbbb\"+this.props.match.params.video_id)\r\n        console.log(`https://www.youtube.com/watch?v=${this.props.match.params.video_id}`);\r\n    }\r\n    componentDidMount(){\r\n        this.setState({\r\n            vid:this.props.match.params.video_id\r\n        })\r\n        console.log(\"cccc\"+this.state.vid)\r\n    }\r\n    onClickFullscreen = () => {\r\n        screenfull.request(findDOMNode(this.refs.player))\r\n      }\r\n\r\n    handleSetPlaybackRate = e => {\r\n        this.setState({ playbackRate: parseFloat(e.target.value) })\r\n      }  \r\n    render(){\r\n        return(\r\n        <div style={{backgroundColor:'#f5f6fa'}}>\r\n            <div style={{position: 'relative', paddingTop: '56.25%',PlayerRatio: '100 / (1280 / 720)' }}>\r\n                <ReactPlayer\r\n                style={{backgroundColor:'#f1f2f6',padding:'5px',position: 'absolute', top: '0', left: '0', borderRadius:'20px'}}\r\n                url={`https://www.youtube.com/watch?v=${this.props.match.params.video_id}`}\r\n                height='100%'\r\n                width='100%'\r\n                controls={true}\r\n                playing={true}\r\n                playbackRate={this.state.playbackRate} \r\n                light={true}    \r\n                pip={true}\r\n                playIcon={true}    \r\n                />\r\n            </div>\r\n\r\n        <div style={{}}>\r\n            <button class=\"z-depth-3\"  style={{backgroundColor:'#f5f6fa',height:'50px', width:'100%',border:'1px solid #8c7ae6',marginTop:'50px',borderRadius:'30px'}} onClick={this.onClickFullscreen}>Click Here For Fullscreen</button>\r\n            {/* <div style={{backgroundColor:'#f5f6fa', marginTop:'20px',padding:'20px',}}>\r\n                <p style={{margin:'5px'}}>Set Playback Speed</p>\r\n                <button style={{backgroundColor:'#f5f6fa',marginTop:'2px',borderRadius:'30px',height:'50px', width:'50%',border:'1px solid #00a8ff'}} onClick={this.handleSetPlaybackRate} value={0.7}>0.7X</button>\r\n                <button style={{backgroundColor:'#f5f6fa',marginTop:'2px',borderRadius:'30px',height:'50px', width:'50%',border:'1px solid #00a8ff'}} onClick={this.handleSetPlaybackRate} value={1}>1X</button>\r\n                <button style={{backgroundColor:'#f5f6fa',marginTop:'2px',borderRadius:'30px',height:'50px', width:'50%',border:'1px solid #00a8ff'}} onClick={this.handleSetPlaybackRate} value={1.5}>1.5X</button>\r\n                <button style={{backgroundColor:'#f5f6fa',marginTop:'2px',borderRadius:'30px',height:'50px', width:'50%',border:'1px solid #00a8ff'}} onClick={this.handleSetPlaybackRate} value={2}>2X</button>\r\n            </div> */}\r\n        </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Player;","import React, {Component, Card} from 'react';\r\nimport './App.css';\r\nimport {Link} from 'react-router-dom'\r\n\r\n\r\nclass RenderPlayList extends React.Component\r\n{\r\n    constructor(props)\r\n  {\r\n    super(props);\r\n    this.state = { \r\n    isLoading: false,\r\n    dataSource: [],\r\n  }\r\n  }\r\n  componentDidMount(){\r\n    console.log(\"bbbb from subject\"+this.props.match.params.subject_link)\r\n    return fetch('https://rahulnag.github.io/kk/kk.json')\r\n      .then((response) => response.json())\r\n      .then((responseJson) => {\r\n        this.setState({\r\n          isLoading: false,\r\n          dataSource: responseJson\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n\r\n      console.log(this.state.dataSource)\r\n  }\r\n\r\n\r\n    render(){\r\n        return(\r\n        <div style={{margin:0,marginTop:10, marginLeft:10, marginRight:10,}}>\r\n      {\r\n        this.state.dataSource.map((data, index) => {\r\n        \r\n        return(\r\n          \r\n          <div key={index} className=\"collection\" style={{borderRadius:'30px',}}>\r\n            \r\n              <Link className=\"collection-item\" style={{fontSize:'20',padding:20,}} to={`/video/${data.userId}`}>\r\n                {data.firstName} \r\n              </Link>\r\n            \r\n          </div>\r\n          // <Link to={`/${data.userId}`}>{data.firstName}</Link>\r\n          )\r\n        })\r\n     }\r\n    </div> \r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default RenderPlayList;","import React, {Component, Card} from 'react';\r\nimport './App.css';\r\nimport {Link} from 'react-router-dom'\r\n\r\nclass SubjectList extends React.Component\r\n{\r\n    constructor(props)\r\n    {\r\n      super(props);\r\n      this.state = { \r\n      isLoading: false,\r\n      subject: [],\r\n    }\r\n    }\r\n    componentDidMount(){\r\n      return fetch('https://rahulnag.github.io/kk/subject.json')\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n        console.log(responseJson)\r\n          this.setState({\r\n            isLoading: false,\r\n            subject: responseJson\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          console.error(error);\r\n        });\r\n  \r\n        console.log(this.state.dataSource)\r\n    }\r\n  \r\n  \r\n      render(){\r\n          return(\r\n          <div style={{\r\n                display:'grid', \r\n                width:'90%',\r\n                margin: '8px auto',\r\n                marginTop:'15px',\r\n                gridTemplateColumns: ' repeat(auto-fit, minmax(150px, 1fr))',\r\n                gridTemplateRows: 'repeat(2, 150px)',\r\n                gridGap:'20px',\r\n                textAlign:'center',\r\n                alignSelf:'end',\r\n                gridAutoRows: '150px',\r\n                }}>\r\n        {\r\n            \r\n          this.state.subject.map((data, index) => {\r\n          \r\n          return(\r\n                <Link class=\"z-depth-3\" style={{backgroundColor:'#eccc68',borderRadius:'10px',border:'1px solid black',paddingTop:'30%',fontSize:'20px', fontFamily:'Arial'}} \r\n                        \r\n                        to={`/subject/${data.videoListLink}`}>\r\n                        {data.subjectName}\r\n                        {/* <img style= {{minHeight:'150px',maxHeight:'150px',objectFit:'fill'}} src={data.image}/> */}\r\n                </Link>\r\n                // </div>\r\n\r\n\r\n        //     <div key={index} className=\"collection\" style={{margin:0,backgroundColor:'#4a148c'}}>\r\n            \r\n        //       <Link className=\"collection-item\" style={{textDecoration: 'none',fontSize:30,padding:20,backgroundColor:'#5c6bc0 '}} to={`/subject/${data.videoListLink}`}>\r\n        //         {data.subjectName} \r\n        //       </Link>\r\n            \r\n        //   </div>\r\n            )\r\n          })\r\n       }\r\n      </div> \r\n          )\r\n      }\r\n  }\r\n  \r\nexport default SubjectList;","import React, {Component,FlatList} from 'react';\nimport './App.css';\nimport Player from './Player'\nimport RenderPlayList from './RenderPlayList'\nimport SubjectList from './SubjectList'\nimport {HashRouter, BrowserRouter, Route} from 'react-router-dom';\n\nclass App extends React.Component{\nmyRef = React.createRef();\ncomponentDidMount(){\n   // this.myRef.current.f\n}\nrender(){\n  return (   \n     <HashRouter ref={this.myRef} basename=\"/\">\n        {/* <RenderPlayList/> */}\n        <Route exact path='/' component={SubjectList}/>\n        <Route path='/subject/:subject_link' component={RenderPlayList}/>\n        <Route exact path='/video/:video_id' component={Player}/> \n     </HashRouter>\n  );\n}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}